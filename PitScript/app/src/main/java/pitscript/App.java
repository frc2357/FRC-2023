/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package pitscript;

import java.io.BufferedReader;
import java.io.File;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.util.List;
import java.util.function.Consumer;


public class App {

    public static String remoteHost = "10.23.57.2";
    public static String username = "admin";
    public static String password = "";
    public static String command = "dir *.wpilog";
    public static List<String> fileNames;

    public static void main(String[] args) {
Runtime runtime = null;
Process process = null;
try {
    runtime = Runtime.getRuntime();
    process = runtime.exec("ssh -l lvuser 10.23.57.2");
    process = runtime.exec("cmd /c cd /home/lvuser/logs");
    process = runtime.exec("cmd /c ls *.wpilog");
    watch(process, runtime);
} catch (IOException e) {
    System.out.println("the proccess broke, so programs gonna crash soon.");
    e.printStackTrace();
}
watch(process, runtime);
}
    private static void watch(final Process process, Runtime runtime) {
        new Thread() {
            public void run() {
                BufferedReader input = new BufferedReader(new InputStreamReader(process.getInputStream()));
                String line = ""; 
                try {
                    while ((line = input.readLine()) != null) {
                        System.out.println(line);
                        System.out.println("<O><O> I see you");
                        fileNames.add(0, line);
                    }
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
        }.start();
    runtime.exit(0);}
    public static class StreamGobbler implements Runnable {
        private InputStream inputStream;
        private Consumer<String> consumer;

        public StreamGobbler(InputStream inputStream, Consumer<String> consumer) {
            this.inputStream = inputStream;
            this.consumer = consumer;
        }

        @Override
        public void run() {
            new BufferedReader(new InputStreamReader(inputStream)).lines()
                    .forEach(consumer);
        }
    }

}
