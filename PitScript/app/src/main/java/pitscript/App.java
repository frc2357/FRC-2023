/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package pitscript;
import java.util.List;

import com.jcraft.jsch.ChannelSftp;
import com.jcraft.jsch.JSch;
import com.jcraft.jsch.JSchException;
import com.jcraft.jsch.Session;
import com.jcraft.jsch.SftpException;




public class App {
    
public String remoteHost = "10.23.57.2";
public String username = "admin";
public String password = "";
static App m_main;
static MakeFileList m_fileLister = new pitscript.MakeFileList().getInstance();
static Session m_jSession;
    public static void main(String[] args) {
        App main = new App();
        m_main = main;
        try {
             main.downloadFile();
        } catch (JSchException | SftpException e ) {
             System.out.println("it didnt download the file");
             e.printStackTrace();
        }
    }

    private ChannelSftp setupJsch() throws JSchException {
        JSch jsch = new JSch();
        Session jschSession = jsch.getSession(username, remoteHost, 22);
        java.util.Properties config = new java.util.Properties(); 
        config.put("StrictHostKeyChecking", "no");
        jschSession.setConfig(config);
        System.out.println("Starting connection...");
        jschSession.connect(60000);
        if(jschSession.isConnected()){System.out.println("Created connection successfully!");}
        else{System.out.println("didnt connect properly! expect the program to go bye bye soon.");}
        ChannelSftp jChannel = (ChannelSftp) jschSession.openChannel("sftp");
        m_jSession = jschSession;
        return jChannel;
    }

    public void downloadFile() throws JSchException, SftpException{
        String remoteFile = "/home/lvuser/Logs";
        String localDir = "C:\\Logs";
    
    ChannelSftp channelSftp = setupJsch();
    System.out.println(m_jSession.isConnected());
    List<String>fileList = m_fileLister.getFileList(remoteFile,channelSftp);
        for(String filePath : fileList){
        channelSftp.get(filePath, localDir);
        }
    System.out.println("it worked :)");
    channelSftp.exit();
}


}
    